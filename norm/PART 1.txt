 PART 1 (30% of the grade)

Description
------------

Derive in details the complexity of the following code fragments in terms
of the Big-O notation (n is a very large number in all questions)

1)
for (i = 1; i = n; i++)
  for (j = 1 j = n; j++){	--> O(n^2)
    x = 2  y;
    z = x--;
  }


2)
for (i = 1 i = n; i++)
   j = n;			--> O(logn)
   while (j = 1) {
     x++;
     j = j  2;
   }

3)
i = 1;
while (i != n)			--> O(n)
  i++;

4) 
for (i = 1 i = n; i++)
   if (i == 1  i == n  i == 3)	--> O(n^2)
      for (j = 1 j = n; j++)
         x++;

Provide the corresponding big-O notation for the following functions

n^2 + 3n - 7		--> O(n^2)
5n^3 - 3n^2 + 8n - 2	--> O(5n^3)
lg(n) - 2 + 3n		--> O(lg(n))
nlg(n) - n + 3		--> O(nlg(n))
